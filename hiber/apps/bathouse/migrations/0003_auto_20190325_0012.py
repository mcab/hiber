# Generated by Django 2.1.7 on 2019-03-25 04:12

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import hiber.apps.bathouse.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('bathouse', '0002_auto_20190226_1258'),
    ]

    operations = [
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='HouseInformation',
            fields=[
                ('house', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='bathouse.House')),
                ('habitat_degradation', models.CharField(choices=[('TR', 'Trash'), ('DU', 'Dumping'), ('ER', 'Erosion'), ('IS', 'Invasive Species'), ('NO', 'None')], max_length=2, verbose_name='Habitat Degradation')),
                ('habitat_type', models.CharField(choices=[('FE', 'Forest Edge'), ('WP', 'Wetland/Pond'), ('FI', 'Field'), ('RI', 'Riparian'), ('DA', 'Developed Area'), ('FG', 'Forest Gap')], max_length=2, verbose_name='Habitat Type')),
                ('geography', models.CharField(choices=[('VA', 'Valley'), ('HP', 'Hillside / Pond'), ('RI', 'Ridgetop'), ('PL', 'Plane')], max_length=2)),
                ('noise', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1, verbose_name='Noise Pollution')),
                ('property_type', models.CharField(choices=[('TO', 'Town'), ('ST', 'State'), ('SC', 'School'), ('LT', 'Land Trust'), ('PR', 'Private')], max_length=2, verbose_name='Property Type')),
                ('slope', models.CharField(choices=[('F', 'Flat'), ('G', 'Gentle'), ('U', 'Undulating'), ('S', 'Steep')], max_length=1)),
                ('surrounding_corridors', models.CharField(choices=[('T', 'Trail'), ('D', 'Dirt Road'), ('P', 'Paved Road'), ('N', 'None')], max_length=1, verbose_name='Surrounding Corridors')),
                ('surrounding_structures', hiber.apps.bathouse.models.ChoiceArrayField(base_field=models.CharField(choices=[('BU', 'Building'), ('BR', 'Bridge'), ('SI', 'Sign'), ('DA', 'Dam'), ('NO', 'None')], max_length=2), size=None)),
                ('surrounding_water_resources', hiber.apps.bathouse.models.ChoiceArrayField(base_field=models.CharField(choices=[('RI', 'River'), ('ES', 'Ephemeral Stream'), ('PS', 'Permanent Stream'), ('LA', 'Lake'), ('PO', 'Pond'), ('VP', 'Vernal Pool'), ('IW', 'Inland Wetland'), ('CW', 'Coastal Wetland'), ('NO', 'None')], max_length=2), size=None)),
                ('surrounding_trees', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Coniferous or Deciduous Trees')),
                ('successional', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Early or Late Successional')),
                ('other_features', models.TextField()),
                ('house_size', models.CharField(choices=[('S', 'Small'), ('M', 'Medium'), ('L', 'Large')], max_length=1, verbose_name='Approximate Size of Bat House')),
                ('morning_sun', models.CharField(choices=[('AN', 'Almost None'), ('VL', 'Very Little'), ('SM', 'Some'), ('PL', 'Plenty'), ('EX', 'Excessive')], max_length=2, verbose_name='Access to Morning Sunlight')),
                ('afternoon_sun', models.CharField(choices=[('AN', 'Almost None'), ('VL', 'Very Little'), ('SM', 'Some'), ('PL', 'Plenty'), ('EX', 'Excessive')], max_length=2, verbose_name='Access to Afternoon Sunlight')),
                ('chambers', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Number of Chambers')),
                ('ground_height', models.PositiveIntegerField(verbose_name='Height Above Ground (in feet)')),
                ('water_distance', models.PositiveIntegerField(verbose_name='Distance to Water (in feet)')),
                ('mounted_on', models.CharField(choices=[('BD', 'Building'), ('TR', 'Tree'), ('PL', 'Pole')], max_length=2)),
                ('installed_on', models.DateField()),
                ('color', models.CharField(max_length=255)),
            ],
        ),
        migrations.AddField(
            model_name='house',
            name='watcher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
    ]
